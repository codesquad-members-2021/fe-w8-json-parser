{"version":3,"sources":["webpack://fe-w8-json-parser/./src/lexer.js","webpack://fe-w8-json-parser/./src/stackParser.js","webpack://fe-w8-json-parser/./src/tokenizer.js","webpack://fe-w8-json-parser/./src/util.js","webpack://fe-w8-json-parser/./src/style.scss?bc3b","webpack://fe-w8-json-parser/webpack/bootstrap","webpack://fe-w8-json-parser/webpack/runtime/define property getters","webpack://fe-w8-json-parser/webpack/runtime/hasOwnProperty shorthand","webpack://fe-w8-json-parser/webpack/runtime/make namespace object","webpack://fe-w8-json-parser/./src/index.js"],"names":["Lexer","type","tokens","result","map","token","getTokenType","value","setValue","openQuotes","closeQuotes","length","isNaN","Number","substring","parseInt","subType","child","Parser","property","stack","prevData","lexResList","forEach","data","setNode","push","pop","propKey","propValue","isProperty","Tokenizer","strStarted","acc","separatorArr","input","strArr","split","str","tokenize","filter","v","trim","isStrSeperator","accumulateStr","separator","find","undefined","pushNinitAcc","_","$","selector","base","document","querySelector","pipe","fns","arg","reduce","fn","resultbox","transBtn","addEventListener","tokenizer","lexer","parser","main","getTokens","bind","getLexerResult","parse","userInp","getElementById","parResJson","JSON","stringify","innerHTML"],"mappings":"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","file":"index.bundle.js","sourcesContent":["export default class Lexer {\n    constructor() {\n        this.type = {\n            '[': 'array',\n            ']': 'array',\n            '{': 'object',\n            '}': 'object',\n            'true': 'boolean',\n            'false': 'boolean',\n            'null': 'null',\n            ':': 'colon',\n        }\n    }\n    getLexerResult (tokens) {\n        const result = tokens.map(token => {\n            const type = this.getTokenType(token);\n            const value = this.setValue(token, type);\n            return value;\n        });\n        return result\n    }\n    getTokenType (tokens) {\n        const openQuotes = tokens[0] === '\\'' || tokens[0] === '\\\"'\n        const closeQuotes = tokens[tokens.length - 1] === '\\'' || tokens[tokens.length - 1] ==='\\\"'\n        if ( openQuotes && closeQuotes ) return 'string';\n        else if (!isNaN(Number(tokens))) return 'number';\n        else return this.type[tokens];\n    }\n    setValue (token, type) {\n        if(type === 'boolean') return { type, value: (token === \"true\") ? true : false };\n        else if(type === 'null') return { type, value: null };\n        else if(type === 'string') return { type, value: token.substring(1, token.length-1) };\n        else if(type === 'number') return { type, value: parseInt(token) };\n        else if(token === '[' || token === '{' ) return { type, subType: 'open' , child: []};\n        else if(token === ']' || token === '}' ) return { type, subType: 'close' };\n        return { type, value: token};\n    };\n}","export default class Parser {\n    constructor() {\n        this.property = null;\n        this.stack = [];\n        this.prevData = 0;\n    }\n    parse(lexResList) {\n        lexResList.forEach(data => {\n            //array, object 시작\n            if (data.subType === \"open\") {\n                //isProperty:1 (value==object)\n                delete data.subType;\n                if (this.prevData.type === \"colon\") this.setNode(data, 1);\n                else this.setNode(data,0);\n                this.stack.push(data.child);\n            }\n            //array, object 종료\n            else if (data.subType === \"close\") this.stack.pop();\n            // string, number, colon ...\n            else {\n                //colon이면 object property 생성\n                if (data.type === \"colon\") {\n                    this.property = {\n                        type: null,\n                        value: {\n                            propKey: {\n                                type: this.prevData.type,\n                                value: this.prevData.value\n                            },\n                            propValue: {\n                                type: null,\n                                value: null\n                            }\n                        }\n                    }\n                    this.stack[this.stack.length - 1].pop();\n                }\n                else this.setNode(data,0);\n            }\n            this.prevData = data;\n        });\n        // 결과값 리턴\n        return this.stack.pop();\n    }\n    //object의 property 생성 \n    //isProperty:0 (value!=object) isProperty:1 (value==object)\n    setNode(data, isProperty) {\n        if (this.property) {\n            this.property.type = \"objectProperty\";\n            this.property.value.propValue.type = data.type;\n            if (isProperty === 0) this.property.value.propValue.value = data.value;\n            else this.property.value.propValue.value = data.child;    \n            \n            this.stack[this.stack.length - 1].push(this.property);\n            this.property = null;\n        }\n        else {\n            if (this.stack.length === 0) this.stack.push(data);\n            else this.stack[this.stack.length - 1].push(data);\n        }\n    }\n} \n","export default class Tokenizer {\n  constructor() {\n    this.result = [];\n    this.strStarted = false;\n    this.acc = '';\n    this.separatorArr = [\"{\", \"}\", \"[\", \"]\", \":\", \",\"];\n  }\n  getTokens(input) {\n    const strArr = input.split(\"\");\n    strArr.forEach(str => this.tokenize(str));\n    this.result = this.result\n      .filter(v => v !== ',')\n      .filter(v => v !== ' ')\n      .map(str => str.trim());\n    return this.result;\n  } \n  tokenize(str) { \n    if(this.isStrSeperator(str) || this.strStarted) this.accumulateStr(str);\n    else {\n      const separator = this.separatorArr.find(v => str === v);\n      if(separator !== undefined) {\n        if(this.acc.length > 0) this.pushNinitAcc();\n        this.result.push(separator);\n      }\n      else this.acc += str;\n    }\n  }\n  isStrSeperator(str) {\n    return str === '\\\"' || str === '\\'';\n  }\n  pushNinitAcc() {\n    this.result.push(this.acc)\n    this.acc = '';\n  }\n  accumulateStr(str) {\n    this.acc += str;\n    if(!this.strStarted && this.isStrSeperator(str)) this.strStarted = true;\n    else if(this.strStarted && this.isStrSeperator(str)) {\n      this.strStarted = false;\n      this.pushNinitAcc();\n    }\n  }\n}","const _ = {\n    $ : (selector, base = document) => base.querySelector(selector),\n    pipe : (...fns) => arg => fns.reduce((arg, fn) => fn(arg),arg)\n}\n\nexport default _;","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './style.scss';\nimport _ from './util.js';\nimport Tokenizer from './tokenizer.js';\nimport Lexer from './lexer.js';\nimport Parser from './stackParser.js';\n// import Parser from './parser.js';\n\n// input 2:  = '[{\"eve\" : 27, \"tami\": [{\"age\":26},28]}]'\n// input 1 : [[\"str\", {\"a\":2}], {\"b\": [1,2], \"2\": 123}]\nconst resultbox = document.querySelector(\".output__box__result\");\nconst transBtn = document.querySelector(\".input__btn__name\");\n\n// =====test=====\n// const tokens = tokenizer.getTokens(input);\n// const lexRes = lexer.getLexerResult(tokens);\n// const parRes = parser.parse(lexRes);\n// const parResJson = JSON.stringify(parRes, null, 2);\n// resultbox.innerHTML = parResJson;\n\n\ntransBtn.addEventListener('click', () => {\n    const tokenizer = new Tokenizer();\n    const lexer = new Lexer();\n    const parser = new Parser();\n\n    const main = _.pipe(\n    tokenizer.getTokens.bind(tokenizer), \n    lexer.getLexerResult.bind(lexer),\n    parser.parse.bind(parser)\n    )\n    let userInp = document.getElementById(\"userInput\").value;\n    let parResJson = JSON.stringify(main(userInp), null, 2);\n    resultbox.innerHTML = parResJson;\n    \n})"],"sourceRoot":""}